version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: burbuja-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_DATABASE: burbuja_engine
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./local-data/mongodb/logs:/var/log/mongodb
    networks:
      - burbuja-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # BurbujaEngine API (only for production mode)
  burbuja-engine:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: burbuja-engine-api
    restart: unless-stopped
    environment:
      # Application Settings
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8000
      - APP_HOST=0.0.0.0
      - APP_PORT=8000
      - APP_NAME=BurbujaEngine API
      - APP_VERSION=1.0.0
      - LOG_LEVEL=Information
      
      # Database Settings
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
      - MONGODB_DATABASE=burbuja_engine
      - MONGODB_TYPE=mongodb
      - MONGODB_CONNECTION_TIMEOUT=5000
      - MONGODB_SERVER_SELECTION_TIMEOUT=5000
      - MONGODB_MAX_POOL_SIZE=10
      - MONGODB_MIN_POOL_SIZE=1    
      
      # CORS Settings
      - CORS_ORIGINS=http://localhost:3000,http://localhost:8080
      - CORS_ALLOW_CREDENTIALS=true
    ports:
      - "8000:8000"
    depends_on:
      mongodb:
        condition: service_healthy
    volumes:
      - ./local-data/logs:/app/logs
    networks:
      - burbuja-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    profiles:
      - production  # Only start in production mode

# Networks
networks:
  burbuja-network:
    driver: bridge

# Volumes
volumes:
  mongodb_data:
    driver: local
